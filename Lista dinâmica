using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Mime;
using System.Text;
using System.Threading.Tasks;

namespace PointerList
{
    class No
    {
        public char Valor;

        // Nó, Node: referência para o próximo ("ponteiro")
        public No Proximo;

        public No(char valor)
        {
            Valor = valor;
            Proximo = null;
        }
    }

    class ListaDinamica
    {
        private No inicio;
        public ListaDinamica()
        {
            inicio = null;
        }
        //inserir no fim
        public void Inserir(char valor)
        {
            No novo = new No(valor);
            if(inicio == null)
            {
                inicio = novo;
            }
            else
            {
                No atual = inicio;
                while (atual.Proximo != null)
                    {
                    atual = atual.Proximo;
                    }
                atual.Proximo = novo;
            }
        }

        //inserir em posicao especifica
        public void InserirNaPosicao(int posicao, char valor)
        {
            No novo = new No(valor);
            if (posicao == 0)
            {
                novo.Proximo = inicio;
                inicio = novo;
                return;
            }

            No atual = inicio;
            for (int i = 0; i < posicao -1; i++)
            {
                if (atual == null)
                {
                    Console.WriteLine("Posição inválida!");
                    return;
                }
                atual = atual.Proximo;
            }
            if (atual == null)
            {
                    Console.WriteLine("Posição inválida!");
                    return;
            }
            novo.Proximo = atual.Proximo;
            atual.Proximo = novo;
        }

        //remover por posição
        public void Remover(int posicao)
        {
            if (inicio == null)
            {
                Console.WriteLine("Lista vazia!");
                return;
            }
            if (posicao == 0)
            {
                inicio = inicio.Proximo;
                return;
            }
            No atual = inicio;
            for (int i = 0 ; i < posicao -1; i++)
            {
                if (atual.Proximo == null)
                {
                    Console.WriteLine("Posição Inválida!");
                    return;
                }
                atual = atual.Proximo;
            }
            if (atual.Proximo == null)
            {
                Console.WriteLine("Posição Inválida!");
                return;
            }
            atual = atual.Proximo.Proximo;
        }

        //exibir elementos
        public void Exibir()
        {
            if (inicio == null)
            {
                Console.WriteLine("Lista vazia!");
                return;
            }

            Console.Write("Lista: ");
            No atual = inicio;
            while (atual != null)
            {
                Console.Write(atual.Valor + " ");
                atual = atual.Proximo;
            }
            Console.WriteLine();
        }

        //retornar elemento em posição especifica
        public char ElementoNaPosicao(int posicao)
        {
            No atual = inicio;
            int cont = 0;

            while (atual != null)
            {
                if (cont == posicao)
                {
                    return atual.Valor;
                }
                atual = atual.Proximo;
                cont++;
            }
            Console.WriteLine("Posição inválida!");
            return '\0';
        }

        //retornar tamanho atual da lista
        public int Size()
        {
            int cont = 0;
            No atual = inicio;
            while (atual != null)
            {
                cont++;
                atual = atual.Proximo;
            }
            return cont;
        }

        // verificar se a lista ta vazia
        public bool Empty()
        {
            return inicio == null;
        }
    }

        internal class Program
    {
        static void Main(string[] args)
        {
            ListaDinamica lista = new ListaDinamica();
            int opcao;
            char valor;
            int posicao;

            do
            {
                Console.WriteLine("lista dinâmica estatica");
                Console.WriteLine("0 Sair.");
                Console.WriteLine("1 Inserir");
                Console.WriteLine("2 Inserir em posição especifica");
                Console.WriteLine("3 Remover por posição");
                Console.WriteLine("4 Tamanho");
                Console.WriteLine("5 Exibir lista");
                Console.WriteLine("6 Exibir item na posição especifica");
                Console.WriteLine("escolha 1 opcao");
                opcao = int.Parse(Console.ReadLine());

                switch (opcao)
                {
                    case 0:
                        Console.WriteLine("Saindo . . . ");
                        break;
                    case 1:
                        Console.WriteLine("digite o valor");
                        valor = Console.ReadKey().KeyChar;
                        Console.WriteLine();
                        lista.Inserir(valor);
                        break;
                    case 2:
                        Console.WriteLine("digite posicao");
                        posicao = int.Parse(Console.ReadLine());
                        Console.WriteLine("digite o valor");
                        valor = Console.ReadKey().KeyChar;
                        Console.WriteLine();
                        lista.InserirNaPosicao(posicao, valor);
                        break;
                    case 3:
                        Console.WriteLine("digite posicao para remover");
                        posicao = int.Parse(Console.ReadLine());
                        lista.Remover(posicao);
                        break;
                    case 4:
                        Console.WriteLine("tamanho atual: " + lista.Size());
                        break;
                    case 5:
                        lista.Exibir();
                        break;
                    case 6:
                        Console.WriteLine("digite posicao");
                        posicao = int.Parse(Console.ReadLine());
                        valor = lista.ElementoNaPosicao(posicao);
                        Console.WriteLine("elemento: " + valor);
                        break;
                    default:
                        break;
                }
            }
            while (opcao != 0);
        }
    }
  
